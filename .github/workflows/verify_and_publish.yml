---
name: verify_and_publish

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - "main"
    tags:
    - "v*"

defaults:
  run:
    shell: bash

# This is needed for 'guestmount' / 'libguestfs'
env:
  LIBGUESTFS_BACKEND: direct

jobs:
  format:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.12']

    steps:
    - name: Grab source
      uses: actions/checkout@v4.1.7

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.2.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Python dependencies and their versions
      run: |
        brew update || true
        brew upgrade pipx || true
        make deps
        make info
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install pre-commit
      run: |
        pipx install pre-commit --python ${{ matrix.python-version }}

    - name: Run pre-commit
      run: |
        make format-all

  selftest:
    needs: format
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Grab source
      uses: actions/checkout@v4.1.7
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.2.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Python dependencies and their versions
      run: |
        brew update || true
        brew upgrade pipx || true
        make deps
        make info
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: All
      run: |
        make all
        cijoe -r

  examples:
    needs: format
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/refenv/cijoe-docker:latest
      options: --privileged

    strategy:
      fail-fast: false
      matrix:
        usage_example:
        - core.default
        - fio.default
        - linux.default
        - qemu.build
        - qemu.guest_aarch64
        - qemu.guest_x86_64
        - system_imaging.aarch64
        - system_imaging.x86_64
        python-version: ['3.12']

    steps:
    - name: Grab source
      uses: actions/checkout@v4.2.2
      with:
        path: repository

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install packages
      run: |
        apt-get -qy update
        apt-get -qy install qemu-efi-aarch64

    - name: Build and install cijoe from source
      run: |
        pipx uninstall cijoe
        cd repository
        make deps info build install
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Emit the example configuration file and workflow
      run: |
        cijoe --example ${{ matrix.usage_example }}

    - name: Run it!
      run: |
        cd cijoe-example-${{ matrix.usage_example }}
        cijoe --monitor -l

    - name: Upload report
      if: always()
      uses: actions/upload-artifact@v4.3.0
      with:
        name: report-cijoe_packages-${{ matrix.usage_example }}
        path: cijoe-example-${{ matrix.usage_example }}/cijoe-output/*
        if-no-files-found: error

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: selftest

    runs-on: ubuntu-latest
    steps:
    - name: Grab source
      uses: actions/checkout@v4.1.7
    - name: Set up Python
      uses: actions/setup-python@v5.2.0
      with:
        python-version: '3.9'

    - name: Python dependencies and their versions
      run: |
        make deps
        make info
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        make release

